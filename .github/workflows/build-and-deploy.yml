name: app deploy to EKS
on:
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - 'DCOS/**'
      - 'K8s/**'
      - 'load-gen/**'
      - 'OpenShift/**'
      - 'Swarm/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.0' # default is latest stable
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: public

    - name: Build, tag, and push docker image to Amazon ECR
      env:
#        REGISTRY: ${{ steps.login-ecr.outputs.registry }
        REGISTRY: "public.ecr.aws/d3m1f3x5/robotshop"
#        REPOSITORY: robotshop
        IMAGE_TAG: latest
      run: |
        pwd;
        cd web;
        docker build -t $REGISTRY:$IMAGE_TAG .
        docker images 
        docker push $REGISTRY:$IMAGE_TAG
#        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
#        echo "output_image=$GITHUB_OUTPUT"
#    - name: Update kube config
#      run: | 
#            mkdir -p $HOME/.kube
#            echo "$KUBE_CONFIG_DATA" | base64 -d > $HOME/.kube/config
#            aws eks update-kubeconfig --region us-east-1 --name mycluster 
#    
#    - name: Deploy to EKS
#      run: |
#        kubectl apply -f deployment.yaml
#        kubectl apply -f service.yaml
